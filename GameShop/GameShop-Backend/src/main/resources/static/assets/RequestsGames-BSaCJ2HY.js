import{_ as k,o as G,c as N,w as f,a as w,e as s,r as n,f as q,m as C,h as D,q as T,p as m,k as E,s as S,b as M}from"./index-OMQGbxgd.js";const Q=D({name:"RequestsGames",setup(){const e=T(),a=M(),l=m({aTitle:"",aDescription:"",aPrice:null,aGameStatus:"",aStockQuantity:null,aPhotoUrl:"",categories:[],platforms:[]}),g=m([]),c=m([]),d=m({}),u=m({}),v=m(["InStock","OutOfStock","PreOrder"]),i=m(!1),p=m(null),V={required:o=>!!o||"Required.",number:o=>!isNaN(o)||"Must be a number."},b=async()=>{try{const o=await S("/categories");g.value=o.categories.map(t=>t.categoryName),d.value={},o.categories.forEach(t=>{d.value[t.categoryName]=t.categoryId})}catch(o){console.error("Error fetching categories:",o)}},r=async()=>{try{const o=await S("/platforms");c.value=o.platforms.map(t=>t.platformName),u.value={},o.platforms.forEach(t=>{u.value[t.platformName]=t.platformId})}catch(o){console.error("Error fetching platforms:",o)}},P=async()=>{try{const o=l.value.categories.map(y=>d.value[y]),t=l.value.platforms.map(y=>u.value[y]);await e.addGame({aTitle:l.value.aTitle,aDescription:l.value.aDescription,aPrice:l.value.aPrice,aGameStatus:l.value.aGameStatus,aStockQuantity:l.value.aStockQuantity,aPhotoUrl:l.value.aPhotoUrl,categories:o,platforms:t}),a.push({name:"EmployeeDashboard"}),alert("Email sent to manager for approval.")}catch(o){console.error("Error adding game:",o),alert("Failed to add game.")}},U=()=>{l.value={aTitle:"",aDescription:"",aPrice:null,aGameStatus:"",aStockQuantity:null,aPhotoUrl:"",categories:[],platforms:[]}};return E(async()=>{await b(),await r()}),{game:l,categories:g,platforms:c,gameStatuses:v,valid:i,form:p,rules:V,submitForm:P,clearForm:U}}});function F(e,a,l,g,c,d){const u=n("v-text-field"),v=n("v-textarea"),i=n("v-select"),p=n("v-btn"),V=n("v-form"),b=n("v-container");return G(),N(b,null,{default:f(()=>[a[11]||(a[11]=w("h2",null,"Add New Game",-1)),s(V,{ref:"form",modelValue:e.valid,"onUpdate:modelValue":a[8]||(a[8]=r=>e.valid=r),onSubmit:C(e.submitForm,["prevent"])},{default:f(()=>[s(u,{modelValue:e.game.aTitle,"onUpdate:modelValue":a[0]||(a[0]=r=>e.game.aTitle=r),label:"Game Title",rules:[e.rules.required],required:""},null,8,["modelValue","rules"]),s(v,{modelValue:e.game.aDescription,"onUpdate:modelValue":a[1]||(a[1]=r=>e.game.aDescription=r),label:"Description",rules:[e.rules.required],required:""},null,8,["modelValue","rules"]),s(u,{modelValue:e.game.aPrice,"onUpdate:modelValue":a[2]||(a[2]=r=>e.game.aPrice=r),modelModifiers:{number:!0},label:"Price",type:"number",rules:[e.rules.required,e.rules.number],required:""},null,8,["modelValue","rules"]),s(i,{modelValue:e.game.aGameStatus,"onUpdate:modelValue":a[3]||(a[3]=r=>e.game.aGameStatus=r),items:e.gameStatuses,label:"Game Status",rules:[e.rules.required],required:""},null,8,["modelValue","items","rules"]),s(u,{modelValue:e.game.aStockQuantity,"onUpdate:modelValue":a[4]||(a[4]=r=>e.game.aStockQuantity=r),modelModifiers:{number:!0},label:"Stock Quantity",type:"number",rules:[e.rules.required,e.rules.number],required:""},null,8,["modelValue","rules"]),s(u,{modelValue:e.game.aPhotoUrl,"onUpdate:modelValue":a[5]||(a[5]=r=>e.game.aPhotoUrl=r),label:"Photo URL",rules:[e.rules.required],required:""},null,8,["modelValue","rules"]),s(i,{modelValue:e.game.categories,"onUpdate:modelValue":a[6]||(a[6]=r=>e.game.categories=r),items:e.categories,label:"Categories",multiple:"",rules:[e.rules.required],required:""},null,8,["modelValue","items","rules"]),s(i,{modelValue:e.game.platforms,"onUpdate:modelValue":a[7]||(a[7]=r=>e.game.platforms=r),items:e.platforms,label:"Platforms",multiple:"",rules:[e.rules.required],required:""},null,8,["modelValue","items","rules"]),s(p,{disabled:!e.valid,type:"submit",color:"success"},{default:f(()=>a[9]||(a[9]=[q("Add Game")])),_:1},8,["disabled"]),s(p,{onClick:e.clearForm,color:"error",text:""},{default:f(()=>a[10]||(a[10]=[q("Clear")])),_:1},8,["onClick"])]),_:1},8,["modelValue","onSubmit"])]),_:1})}const R=k(Q,[["render",F]]);export{R as default};
